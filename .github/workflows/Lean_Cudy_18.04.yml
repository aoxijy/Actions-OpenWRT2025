name: Lean_Cudy_18.04
on:
  workflow_dispatch:
    inputs:
      MODEL:
        required: true
        description: 选择需要编译的固件
        type: choice
        default: Lean_Cudy_18.04
        options:
          - Lean_Cudy_18.04
      CACHE_BUILD:
        description: "缓存加速"
        required: false
        default: true
        type: boolean
      SSH_ACTION:
        description: "SSH远程配置固件"
        required: false
        default: false
        type: boolean
  schedule:
    - cron: 0 17 * * *
env:
  TZ: Asia/Shanghai
  MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  WECHAT_WORK_URL: ${{ secrets.WECHAT_WORK_URL }}
  WECHAT_WORK_TOKEN: ${{ secrets.WECHAT_WORK_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  GITHUB_RELEASE: https://github.com/xcz-ns/OpenWrt-Build/releases 
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4
      - name: 检测脚本设置
        run: |
          source "${GITHUB_WORKSPACE}/build/${{ github.event.inputs.MODEL }}/settings.ini"
          echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
          echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
          echo "FIRMWARE_MESSAGE=${FIRMWARE_MESSAGE}" >> $GITHUB_ENV
          echo "CUSTOM_SH=${CUSTOM_SH}" >> $GITHUB_ENV
          echo "CACHE_BUILD=${CACHE_BUILD}" >> $GITHUB_ENV
          echo "SSH_ACTIONS=${SSH_ACTIONS}" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
          echo "UPLOAD_QCOW2=${UPLOAD_QCOW2}" >> $GITHUB_ENV
          echo "UPLOAD_VHDX=${UPLOAD_VHDX}" >> $GITHUB_ENV
          echo "UPLOAD_VMDK=${UPLOAD_VMDK}" >> $GITHUB_ENV
          echo "UPLOAD_IPK=${UPLOAD_IPK}" >> $GITHUB_ENV
          echo "UPLOAD_CONFIG=${UPLOAD_CONFIG}" >> $GITHUB_ENV
          echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> $GITHUB_ENV
          echo "WECHAT_WORK_PUSH=${WECHAT_WORK_PUSH}" >> $GITHUB_ENV
          echo "TELEGRAM_BOT=${TELEGRAM_BOT}" >> $GITHUB_ENV
          echo "HOME=${GITHUB_WORKSPACE}/openwrt" >> $GITHUB_ENV
          echo "WORKPATH=${GITHUB_WORKSPACE}/openwrt/build/${{ github.event.inputs.MODEL }}" >> $GITHUB_ENV
      - name: 类型转换
        run: |
          echo "CACHE_BUILD=$([[ ${{ github.event.inputs.CACHE_BUILD }} == "true" ]] && echo "true" || echo "false")" >> $GITHUB_ENV
          echo "SSH_ACTIONS=$([[ ${{ github.event.inputs.SSH_ACTION }} == "true" ]] && echo "true" || echo "false")" >> $GITHUB_ENV
      - name: 使用自定义编译 Action
        uses: ./.github/actions/custom-compile-action
        with:
          target: ${{ github.event.inputs.MODEL }}
          config-file: ${{ env.CONFIG_FILE }}
          firmware-message: ${{ env.FIRMWARE_MESSAGE }}
          cache-build: ${{ env.CACHE_BUILD }}
          upload-firmware: ${{ env.UPLOAD_FIRMWARE }}
          upload-qcow2: ${{ env.UPLOAD_QCOW2 }}
          upload-vhdx: ${{ env.UPLOAD_VHDX }}
          upload-vmdk: ${{ env.UPLOAD_VMDK }}
          upload-ipk: ${{ env.UPLOAD_IPK }}
          upload-config: ${{ env.UPLOAD_CONFIG }}
          upload-release: ${{ env.UPLOAD_RELEASE }}
          wechat-work-push: ${{ env.WECHAT_WORK_PUSH }}
          telegram-bot: ${{ env.TELEGRAM_BOT }}
          ssh-actions: ${{ env.SSH_ACTIONS }}
          tz: Asia/Shanghai